package ru.practicum.shareit.item.controller;

import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * TODO Sprint add-controllers.
 */
@RestController
@RequestMapping("/items")
@RequiredArgsConstructor
public class ItemController {
}

/* todo

    Добавление новой вещи. Будет происходить по эндпойнту POST /items.
    На вход поступает объект ItemDto. userId в заголовке X-Sharer-User-Id — это идентификатор пользователя,
    который добавляет вещь. Именно этот пользователь — владелец вещи.
    Идентификатор владельца будет поступать на вход в каждом из запросов, рассмотренных далее.

    Редактирование вещи. Эндпойнт PATCH /items/{itemId}. Изменить можно название, описание и статус доступа к аренде.
    Редактировать вещь может только её владелец.

    Просмотр информации о конкретной вещи по её идентификатору. Эндпойнт GET /items/{itemId}.
    Информацию о вещи может просмотреть любой пользователь.

    Просмотр владельцем списка всех его вещей с указанием названия и описания для каждой. Эндпойнт GET /items.

    Поиск вещи потенциальным арендатором. Пользователь передаёт в строке запроса текст, и система ищет вещи,
    содержащие этот текст в названии или описании. Происходит по эндпойнту /items/search?text={text},
    в text передаётся текст для поиска. Проверьте, что поиск возвращает только доступные для аренды вещи.

    Для каждого из данных сценариев создайте соответственный метод в контроллере. Также создайте интерфейс ItemService
    и реализующий его класс ItemServiceImpl, к которому будет обращаться ваш контроллер.
    В качестве DAO создайте реализации, которые будут хранить данные в памяти приложения.
    Работу с базой данных вы реализуете в следующем спринте.

 */